{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xingx\\\\Desktop\\\\react-practice\\\\antd-demo\\\\src\\\\components\\\\sideMenu.jsx\";\nimport { Menu, Icon } from \"antd\";\nimport React, { Component, Fragment } from \"react\";\nconst SubMenu = Menu.SubMenu;\n\nclass SideMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      theme: this.props.theme,\n      folder: this.props.folder,\n      collapsed: false,\n      value: undefined,\n      treeData: [{\n        id: 1,\n        pId: 0,\n        value: \"1\",\n        title: \"Expand to load\"\n      }, {\n        id: 2,\n        pId: 0,\n        value: \"2\",\n        title: \"Expand to load\"\n      }, {\n        id: 3,\n        pId: 0,\n        value: \"3\",\n        title: \"Tree Node\",\n        isLeaf: true\n      }]\n    };\n\n    this.onChange = value => {\n      console.log(value);\n      this.setState({\n        value\n      });\n    };\n\n    this.genTreeNode = (parentId, isLeaf = false) => {\n      const random = Math.random().toString(36).substring(2, 6);\n      return {\n        id: random,\n        pId: parentId,\n        value: random,\n        title: isLeaf ? \"Tree Node\" : \"Expand to load\",\n        isLeaf\n      };\n    };\n\n    this.onLoadData = treeNode => new Promise(resolve => {\n      const id = treeNode.props.id;\n      setTimeout(() => {\n        this.setState({\n          treeData: this.state.treeData.concat([this.genTreeNode(id, false), this.genTreeNode(id, true)])\n        });\n        resolve();\n      }, 300);\n    });\n\n    this.toggle = () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    };\n\n    this.buildSideBar = folder => {\n      if (!folder.folders && !folder.documents) {\n        return undefined;\n      }\n\n      return folder.documents.map(doc => React.createElement(Menu.Item, {\n        key: doc.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"file-markdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), doc.title)).concat(folder.folders.map(new_folder => React.createElement(SubMenu, {\n        key: new_folder.id,\n        title: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"folder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, new_folder.folderName)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.buildSideBar(new_folder))));\n    };\n  }\n\n  render() {\n    return React.createElement(Menu, {\n      mode: \"inline\",\n      onChange: this.props.onChange,\n      theme: this.state.theme,\n      inlineCollapsed: this.state.collapsed,\n      style: {\n        width: \"100%\",\n        height: this.props.height\n      },\n      style: {\n        height: this.props.height,\n        width: this.props.width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.buildSideBar(this.state.folder));\n  }\n\n}\n\nexport default SideMenu;","map":{"version":3,"sources":["C:/Users/xingx/Desktop/react-practice/antd-demo/src/components/sideMenu.jsx"],"names":["Menu","Icon","React","Component","Fragment","SubMenu","SideMenu","state","theme","props","folder","collapsed","value","undefined","treeData","id","pId","title","isLeaf","onChange","console","log","setState","genTreeNode","parentId","random","Math","toString","substring","onLoadData","treeNode","Promise","resolve","setTimeout","concat","toggle","buildSideBar","folders","documents","map","doc","new_folder","folderName","render","width","height"],"mappings":"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","sourcesContent":["import { Menu, Icon } from \"antd\";\r\nimport React, { Component, Fragment } from \"react\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass SideMenu extends Component {\r\n  state = {\r\n    theme: this.props.theme,\r\n    folder: this.props.folder,\r\n    collapsed: false,\r\n    value: undefined,\r\n    treeData: [\r\n      { id: 1, pId: 0, value: \"1\", title: \"Expand to load\" },\r\n      { id: 2, pId: 0, value: \"2\", title: \"Expand to load\" },\r\n      { id: 3, pId: 0, value: \"3\", title: \"Tree Node\", isLeaf: true }\r\n    ]\r\n  };\r\n\r\n  onChange = value => {\r\n    console.log(value);\r\n    this.setState({ value });\r\n  };\r\n\r\n  genTreeNode = (parentId, isLeaf = false) => {\r\n    const random = Math.random()\r\n      .toString(36)\r\n      .substring(2, 6);\r\n    return {\r\n      id: random,\r\n      pId: parentId,\r\n      value: random,\r\n      title: isLeaf ? \"Tree Node\" : \"Expand to load\",\r\n      isLeaf\r\n    };\r\n  };\r\n\r\n  onLoadData = treeNode =>\r\n    new Promise(resolve => {\r\n      const { id } = treeNode.props;\r\n      setTimeout(() => {\r\n        this.setState({\r\n          treeData: this.state.treeData.concat([\r\n            this.genTreeNode(id, false),\r\n            this.genTreeNode(id, true)\r\n          ])\r\n        });\r\n        resolve();\r\n      }, 300);\r\n    });\r\n\r\n  toggle = () => {\r\n    this.setState({ collapsed: !this.state.collapsed });\r\n  };\r\n\r\n  buildSideBar = folder => {\r\n    if (!folder.folders && !folder.documents) {\r\n      return undefined;\r\n    }\r\n    return folder.documents\r\n      .map(doc => (\r\n        <Menu.Item key={doc.id}>\r\n          <Icon type=\"file-markdown\" />\r\n          {doc.title}\r\n        </Menu.Item>\r\n      ))\r\n      .concat(\r\n        folder.folders.map(new_folder => (\r\n          <SubMenu\r\n            key={new_folder.id}\r\n            title={\r\n              <span>\r\n                <Icon type=\"folder\" />\r\n                <span>{new_folder.folderName}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {this.buildSideBar(new_folder)}\r\n          </SubMenu>\r\n        ))\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu\r\n        mode=\"inline\"\r\n        onChange={this.props.onChange}\r\n        theme={this.state.theme}\r\n        inlineCollapsed={this.state.collapsed}\r\n        style={{ width: \"100%\", height: this.props.height }}\r\n        style={{ height: this.props.height, width: this.props.width }}\r\n      >\r\n        {this.buildSideBar(this.state.folder)}\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu;\r\n"]},"metadata":{},"sourceType":"module"}