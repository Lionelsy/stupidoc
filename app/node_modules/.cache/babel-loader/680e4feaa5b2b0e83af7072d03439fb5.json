{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xingx\\\\Desktop\\\\app\\\\src\\\\components\\\\docCard.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Col, Row, Avatar, Icon, Typography } from \"antd\";\nconst Meta = Card.Meta;\nconst Text = Typography.Text;\n\nclass DocCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      documents: this.props.documents\n    };\n\n    this.formatDate = date => {\n      var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var day = date.getDate();\n      var monthIndex = date.getMonth();\n      var year = date.getFullYear();\n      return day + \" \" + monthNames[monthIndex] + \" \" + year;\n    };\n\n    this.sort_by_date = documents => {\n      let result = [];\n\n      for (let i = 0; i < documents.length; i++) {\n        let doc = documents[i];\n        let t = new Date(doc.createTime).getDay();\n        console.log(t);\n\n        if (!result[t]) {\n          result[t] = [doc];\n        } else {\n          result[t].push(doc);\n        }\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    const selected = this.props.selected;\n    const documents = this.state.documents;\n\n    if (selected === \"1\") {\n      const sorted_documents = this.sort_by_date(documents);\n      console.log(sorted_documents);\n      return React.createElement(\"div\", {\n        style: {\n          background: \"white\",\n          padding: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, sorted_documents.map(e => React.createElement(\"div\", {\n        key: e[0].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Text, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.formatDate(new Date(e[0].createTime)))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, e.map(doc => React.createElement(Col, {\n        span: 8,\n        key: doc.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"97%\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"10px\",\n          marginBottom: \"10px\"\n        },\n        actions: [React.createElement(Icon, {\n          type: \"setting\",\n          key: \"setting\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(Icon, {\n          type: \"edit\",\n          key: \"edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(Icon, {\n          type: \"ellipsis\",\n          key: \"ellipsis\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Meta, {\n        avatar: React.createElement(Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }),\n        title: \"Card title\",\n        description: \"This is the description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })))))))));\n    }\n\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Todo\");\n  }\n\n}\n\nexport default DocCard;","map":{"version":3,"sources":["C:/Users/xingx/Desktop/app/src/components/docCard.jsx"],"names":["React","Component","Card","Col","Row","Avatar","Icon","Typography","Meta","Text","DocCard","state","documents","props","formatDate","date","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","sort_by_date","result","i","length","doc","t","Date","createTime","getDay","console","log","push","render","selected","sorted_documents","background","padding","map","e","id","width","marginLeft","marginRight","marginTop","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,UAAvC,QAAyD,MAAzD;MAEQC,I,GAASN,I,CAATM,I;MACAC,I,GAASF,U,CAATE,I;;AAER,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BU,KAD8B,GACtB;AAAEC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD;AAAxB,KADsB;;AAAA,SAG9BE,UAH8B,GAGjBC,IAAI,IAAI;AACnB,UAAIC,UAAU,GAAG,CACf,SADe,EAEf,UAFe,EAGf,OAHe,EAIf,OAJe,EAKf,KALe,EAMf,MANe,EAOf,MAPe,EAQf,QARe,EASf,WATe,EAUf,SAVe,EAWf,UAXe,EAYf,UAZe,CAAjB;AAeA,UAAIC,GAAG,GAAGF,IAAI,CAACG,OAAL,EAAV;AACA,UAAIC,UAAU,GAAGJ,IAAI,CAACK,QAAL,EAAjB;AACA,UAAIC,IAAI,GAAGN,IAAI,CAACO,WAAL,EAAX;AAEA,aAAOL,GAAG,GAAG,GAAN,GAAYD,UAAU,CAACG,UAAD,CAAtB,GAAqC,GAArC,GAA2CE,IAAlD;AACD,KAxB6B;;AAAA,SA0B9BE,YA1B8B,GA0BfX,SAAS,IAAI;AAC1B,UAAIY,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,SAAS,CAACc,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,YAAIE,GAAG,GAAGf,SAAS,CAACa,CAAD,CAAnB;AACA,YAAIG,CAAC,GAAG,IAAIC,IAAJ,CAASF,GAAG,CAACG,UAAb,EAAyBC,MAAzB,EAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;;AACA,YAAI,CAACJ,MAAM,CAACI,CAAD,CAAX,EAAgB;AACdJ,UAAAA,MAAM,CAACI,CAAD,CAAN,GAAY,CAACD,GAAD,CAAZ;AACD,SAFD,MAEO;AACLH,UAAAA,MAAM,CAACI,CAAD,CAAN,CAAUM,IAAV,CAAeP,GAAf;AACD;AACF;;AACD,aAAOH,MAAP;AACD,KAvC6B;AAAA;;AAyC9BW,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKvB,KAAL,CAAWuB,QAA5B;AADO,UAECxB,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;;AAGP,QAAIwB,QAAQ,KAAK,GAAjB,EAAsB;AACpB,YAAMC,gBAAgB,GAAG,KAAKd,YAAL,CAAkBX,SAAlB,CAAzB;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAYI,gBAAZ;AACA,aACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,OAAd;AAAuBC,UAAAA,OAAO,EAAE;AAAhC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,gBAAgB,CAACG,GAAjB,CAAqBC,CAAC,IACrB;AAAK,QAAA,GAAG,EAAEA,CAAC,CAAC,CAAD,CAAD,CAAKC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK5B,UAAL,CAAgB,IAAIe,IAAJ,CAASY,CAAC,CAAC,CAAD,CAAD,CAAKX,UAAd,CAAhB,CADH,CADF,CADF,EAME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGW,CAAC,CAACD,GAAF,CAAMb,GAAG,IACR,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,GAAG,EAAEA,GAAG,CAACe,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,KADF;AAELC,UAAAA,UAAU,EAAE,KAFP;AAGLC,UAAAA,WAAW,EAAE,KAHR;AAILC,UAAAA,SAAS,EAAE,MAJN;AAKLC,UAAAA,YAAY,EAAE;AALT,SADT;AAQE,QAAA,OAAO,EAAE,CACP,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAqB,UAAA,GAAG,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADO,EAEP,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,GAAG,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFO,EAGP,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,UAAX;AAAsB,UAAA,GAAG,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHO,CARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcE,oBAAC,IAAD;AACE,QAAA,MAAM,EACJ,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAC,kEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAIE,QAAA,KAAK,EAAC,YAJR;AAKE,QAAA,WAAW,EAAC,yBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF,CADD,CADH,CANF,CADD,CADH,CADF,CADF;AA2CD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AA5F6B;;AA+FhC,eAAerC,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, Col, Row, Avatar, Icon, Typography } from \"antd\";\r\n\r\nconst { Meta } = Card;\r\nconst { Text } = Typography;\r\n\r\nclass DocCard extends Component {\r\n  state = { documents: this.props.documents };\r\n\r\n  formatDate = date => {\r\n    var monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n\r\n    var day = date.getDate();\r\n    var monthIndex = date.getMonth();\r\n    var year = date.getFullYear();\r\n\r\n    return day + \" \" + monthNames[monthIndex] + \" \" + year;\r\n  };\r\n\r\n  sort_by_date = documents => {\r\n    let result = [];\r\n    for (let i = 0; i < documents.length; i++) {\r\n      let doc = documents[i];\r\n      let t = new Date(doc.createTime).getDay();\r\n      console.log(t);\r\n      if (!result[t]) {\r\n        result[t] = [doc];\r\n      } else {\r\n        result[t].push(doc);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    const selected = this.props.selected;\r\n    const { documents } = this.state;\r\n    if (selected === \"1\") {\r\n      const sorted_documents = this.sort_by_date(documents);\r\n      console.log(sorted_documents);\r\n      return (\r\n        <div style={{ background: \"white\", padding: \"30px\" }}>\r\n          <Row>\r\n            {sorted_documents.map(e => (\r\n              <div key={e[0].id}>\r\n                <div>\r\n                  <Text disabled>\r\n                    {this.formatDate(new Date(e[0].createTime))}\r\n                  </Text>\r\n                </div>\r\n                <Row>\r\n                  {e.map(doc => (\r\n                    <Col span={8} key={doc.id}>\r\n                      <Card\r\n                        style={{\r\n                          width: \"97%\",\r\n                          marginLeft: \"5px\",\r\n                          marginRight: \"5px\",\r\n                          marginTop: \"10px\",\r\n                          marginBottom: \"10px\"\r\n                        }}\r\n                        actions={[\r\n                          <Icon type=\"setting\" key=\"setting\" />,\r\n                          <Icon type=\"edit\" key=\"edit\" />,\r\n                          <Icon type=\"ellipsis\" key=\"ellipsis\" />\r\n                        ]}\r\n                      >\r\n                        <Meta\r\n                          avatar={\r\n                            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                          }\r\n                          title=\"Card title\"\r\n                          description=\"This is the description\"\r\n                        />\r\n                      </Card>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n              </div>\r\n            ))}\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n    return <h2>Todo</h2>;\r\n  }\r\n}\r\n\r\nexport default DocCard;\r\n"]},"metadata":{},"sourceType":"module"}