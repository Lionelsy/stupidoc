{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xingx\\\\Desktop\\\\stupidoc\\\\app\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Form, Icon, Input, Button, Checkbox, notification } from \"antd\";\nimport ReactDOM from \"react-dom\";\n\nconst openNotificationWithIcon = type => {\n  notification[type]({\n    message: \"Wrong password\",\n    description: \"The password is correct!\"\n  });\n};\n\nclass NormalLoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, getFieldDecorator(\"username\", {\n      rules: [{\n        required: true,\n        message: \"UserId is required\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Password is required\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, getFieldDecorator(\"remember\", {\n      valuePropName: \"checked\",\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Remember me\"))), React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Forgot password\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Log in\"))));\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create({\n  name: \"normal_login\"\n})(NormalLoginForm);\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["C:/Users/xingx/Desktop/stupidoc/app/src/components/login/login.jsx"],"names":["React","Component","Card","Form","Icon","Input","Button","Checkbox","notification","ReactDOM","openNotificationWithIcon","type","message","description","NormalLoginForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","render","getFieldDecorator","textAlign","rules","required","color","float","valuePropName","initialValue","WrappedNormalLoginForm","create","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoDC,YAApD,QAAwE,MAAxE;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,wBAAwB,GAAGC,IAAI,IAAI;AACvCH,EAAAA,YAAY,CAACG,IAAD,CAAZ,CAAmB;AACjBC,IAAAA,OAAO,EAAE,gBADQ;AAEjBC,IAAAA,WAAW,EAAE;AAFI,GAAnB;AAID,CALD;;AAOA,MAAMC,eAAN,SAA8Bb,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SACtCc,YADsC,GACvBC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC9C,YAAI,CAACD,GAAL,EAAU;AACRE,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACD;AACF,OAJD;AAKD,KARqC;AAAA;;AAUtCG,EAAAA,MAAM,GAAG;AAAA,UACCC,iBADD,GACuB,KAAKR,KAAL,CAAWC,IADlC,CACCO,iBADD;AAEP,WACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKX,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEY,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,iBAAiB,CAAC,UAAD,EAAa;AAC7BE,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBjB,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADsB,KAAb,CAAjB,CAGC,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEkB,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,WAAW,EAAC,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADH,CADF,EAWE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,iBAAiB,CAAC,UAAD,EAAa;AAC7BE,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBjB,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADsB,KAAb,CAAjB,CAGC,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEkB,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,WAAW,EAAC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADH,CAXF,EAsBE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,iBAAiB,CAAC,UAAD,EAAa;AAC7BM,MAAAA,aAAa,EAAE,SADc;AAE7BC,MAAAA,YAAY,EAAE;AAFe,KAAb,CAAjB,CAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADH,CADF,EAOE;AAAK,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,IAAI,EAAC,EAFP;AAGE,MAAA,KAAK,EAAE;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAPF,CADF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAmBE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,QAAQ,EAAC,QAFX;AAGE,MAAA,SAAS,EAAC,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAnBF,CAtBF,CADF;AAsDD;;AAlEqC;;AAqExC,MAAMO,sBAAsB,GAAG/B,IAAI,CAACgC,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAC7BtB,eAD6B,CAA/B;AAIA,eAAeoB,sBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, Form, Icon, Input, Button, Checkbox, notification } from \"antd\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst openNotificationWithIcon = type => {\r\n  notification[type]({\r\n    message: \"Wrong password\",\r\n    description: \"The password is correct!\"\r\n  });\r\n};\r\n\r\nclass NormalLoginForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <Form.Item style={{ textAlign: \"right\" }}>\r\n          {getFieldDecorator(\"username\", {\r\n            rules: [{ required: true, message: \"UserId is required\" }]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"Username\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item style={{ textAlign: \"right\" }}>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [{ required: true, message: \"Password is required\" }]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <div>\r\n            <div style={{ float: \"left\" }}>\r\n              {getFieldDecorator(\"remember\", {\r\n                valuePropName: \"checked\",\r\n                initialValue: true\r\n              })(<Checkbox>Remember me</Checkbox>)}\r\n            </div>\r\n            <div style={{ float: \"right\" }}>\r\n              <a\r\n                className=\"login-form-forgot\"\r\n                href=\"\"\r\n                style={{ textAlign: \"right\" }}\r\n              >\r\n                Forgot password\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(\r\n  NormalLoginForm\r\n);\r\n\r\nexport default WrappedNormalLoginForm;\r\n"]},"metadata":{},"sourceType":"module"}