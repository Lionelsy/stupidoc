{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xingx\\\\Desktop\\\\react-practice\\\\antd-demo\\\\src\\\\components\\\\sideMenu.jsx\";\nimport { Menu, Icon } from \"antd\";\nimport React, { Component, Fragment } from \"react\";\nconst SubMenu = Menu.SubMenu;\n\nclass SideMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      theme: this.props.theme,\n      folder: this.props.folder,\n      collapsed: false,\n      value: undefined,\n      treeData: [{\n        id: 1,\n        pId: 0,\n        value: \"1\",\n        title: \"Expand to load\"\n      }, {\n        id: 2,\n        pId: 0,\n        value: \"2\",\n        title: \"Expand to load\"\n      }, {\n        id: 3,\n        pId: 0,\n        value: \"3\",\n        title: \"Tree Node\",\n        isLeaf: true\n      }]\n    };\n\n    this.onChange = value => {\n      console.log(value);\n      this.setState({\n        value\n      });\n    };\n\n    this.genTreeNode = (parentId, isLeaf = false) => {\n      const random = Math.random().toString(36).substring(2, 6);\n      return {\n        id: random,\n        pId: parentId,\n        value: random,\n        title: isLeaf ? \"Tree Node\" : \"Expand to load\",\n        isLeaf\n      };\n    };\n\n    this.onLoadData = treeNode => new Promise(resolve => {\n      const id = treeNode.props.id;\n      setTimeout(() => {\n        this.setState({\n          treeData: this.state.treeData.concat([this.genTreeNode(id, false), this.genTreeNode(id, true)])\n        });\n        resolve();\n      }, 300);\n    });\n\n    this.toggle = () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    };\n\n    this.buildSideBar = folder => {\n      console.log(folder);\n      if (!folder || !folder.documents) return undefined; // return (\n      //   <Fragment>\n      //     {/* {folder.documents.map(doc => (\n      //       <Menu.Item key={doc.id}>\n      //         <Icon type=\"file-markdown\" />\n      //         {doc.title}\n      //       </Menu.Item>\n      //     ))} */}\n      //     {console.log(\"ok\")}\n      //     {folder.folders.map(new_folder => (\n      //       <SubMenu key={new_folder.id}>{this.buildSideBar(new_folder)}</SubMenu>\n      //     ))}\n      //   </Fragment>\n      // );\n\n      return folder.folders.map(new_folder => React.createElement(SubMenu, {\n        key: new_folder.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.buildSideBar(new_folder))); // if (!folder) return undefined;\n      // return (\n      //   <div>\n      //     {folder.documents.map(doc => (\n      //       <Menu.Item key={doc.id}>{doc.title}</Menu.Item>\n      //     ))}\n      //     {/* {folder.folder ? this.buildSideBar(folder.folder) : undefined} */}\n      //   </div>\n      // );\n      // var documents = undefined;\n      // if (folder.documents) {\n      //   documents = (\n      //     <div>\n      //       <Menu\n      //         theme={this.state.theme}\n      //         style={{ width: this.props.width, height: this.props.height }}\n      //         mode=\"inline\"\n      //         inlineCollapsed={this.state.collapsed}\n      //       >\n      //         {folder.documents.map(doc => (\n      //           <Menu.Item key={doc.id}>{doc.title}</Menu.Item>\n      //         ))}\n      //       </Menu>\n      //     </div>\n      //   );\n      // }\n      // return documents;\n    };\n  }\n\n  render() {\n    return React.createElement(Menu, {\n      theme: this.state.theme,\n      style: {\n        width: \"100%\",\n        height: this.props.height\n      },\n      mode: \"inline\",\n      inlineCollapsed: this.state.collapsed,\n      style: {\n        height: this.props.height,\n        width: this.props.width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.buildSideBar(this.state.folder)); // return (\n    //   <div>\n    //     <Menu\n    //       theme={this.state.theme}\n    //       style={{ width: \"100%\", height: this.props.height }}\n    //       mode=\"inline\"\n    //       inlineCollapsed={this.state.collapsed}\n    //       style={{ height: this.props.height, width: this.props.width }}\n    //     >\n    //       <SubMenu\n    //         key=\"sub1\"\n    //         title={\n    //           <span>\n    //             <Icon type=\"mail\" />\n    //             <span>Navigation One</span>\n    //           </span>\n    //         }\n    //       >\n    //         <Menu.Item key=\"1\">Option 1</Menu.Item>\n    //         <Menu.Item key=\"2\">Option 2</Menu.Item>\n    //         <Menu.Item key=\"3\">Option 3</Menu.Item>\n    //         <Menu.Item key=\"4\">Option 4</Menu.Item>\n    //       </SubMenu>\n    //       <SubMenu\n    //         key=\"sub2\"\n    //         title={\n    //           <span>\n    //             <Icon type=\"appstore\" />\n    //             <span>Navigation Two</span>\n    //           </span>\n    //         }\n    //       >\n    //         <Menu.Item key=\"5\">Option 5</Menu.Item>\n    //         <Menu.Item key=\"6\">Option 6</Menu.Item>\n    //         <SubMenu key=\"sub3\" title=\"Submenu\">\n    //           <Menu.Item key=\"7\">Option 7</Menu.Item>\n    //           <Menu.Item key=\"8\">Option 8</Menu.Item>\n    //         </SubMenu>\n    //       </SubMenu>\n    //       <SubMenu\n    //         key=\"sub4\"\n    //         title={\n    //           <span>\n    //             <Icon type=\"setting\" />\n    //             <span>Navigation Three</span>\n    //           </span>\n    //         }\n    //       >\n    //         <Menu.Item key=\"9\">Option 9</Menu.Item>\n    //         <Menu.Item key=\"10\">Option 10</Menu.Item>\n    //         <Menu.Item key=\"11\">Option 11</Menu.Item>\n    //         <Menu.Item key=\"12\">Option 12</Menu.Item>\n    //       </SubMenu>\n    //     </Menu>\n    //   </div>\n    // );\n  }\n\n}\n\nexport default SideMenu;","map":{"version":3,"sources":["C:/Users/xingx/Desktop/react-practice/antd-demo/src/components/sideMenu.jsx"],"names":["Menu","Icon","React","Component","Fragment","SubMenu","SideMenu","state","theme","props","folder","collapsed","value","undefined","treeData","id","pId","title","isLeaf","onChange","console","log","setState","genTreeNode","parentId","random","Math","toString","substring","onLoadData","treeNode","Promise","resolve","setTimeout","concat","toggle","buildSideBar","documents","folders","map","new_folder","render","width","height"],"mappings":"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","sourcesContent":["import { Menu, Icon } from \"antd\";\r\nimport React, { Component, Fragment } from \"react\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass SideMenu extends Component {\r\n  state = {\r\n    theme: this.props.theme,\r\n    folder: this.props.folder,\r\n    collapsed: false,\r\n    value: undefined,\r\n    treeData: [\r\n      { id: 1, pId: 0, value: \"1\", title: \"Expand to load\" },\r\n      { id: 2, pId: 0, value: \"2\", title: \"Expand to load\" },\r\n      { id: 3, pId: 0, value: \"3\", title: \"Tree Node\", isLeaf: true }\r\n    ]\r\n  };\r\n\r\n  onChange = value => {\r\n    console.log(value);\r\n    this.setState({ value });\r\n  };\r\n\r\n  genTreeNode = (parentId, isLeaf = false) => {\r\n    const random = Math.random()\r\n      .toString(36)\r\n      .substring(2, 6);\r\n    return {\r\n      id: random,\r\n      pId: parentId,\r\n      value: random,\r\n      title: isLeaf ? \"Tree Node\" : \"Expand to load\",\r\n      isLeaf\r\n    };\r\n  };\r\n\r\n  onLoadData = treeNode =>\r\n    new Promise(resolve => {\r\n      const { id } = treeNode.props;\r\n      setTimeout(() => {\r\n        this.setState({\r\n          treeData: this.state.treeData.concat([\r\n            this.genTreeNode(id, false),\r\n            this.genTreeNode(id, true)\r\n          ])\r\n        });\r\n        resolve();\r\n      }, 300);\r\n    });\r\n\r\n  toggle = () => {\r\n    this.setState({ collapsed: !this.state.collapsed });\r\n  };\r\n\r\n  buildSideBar = folder => {\r\n    console.log(folder);\r\n    if (!folder || !folder.documents) return undefined;\r\n    // return (\r\n    //   <Fragment>\r\n    //     {/* {folder.documents.map(doc => (\r\n    //       <Menu.Item key={doc.id}>\r\n    //         <Icon type=\"file-markdown\" />\r\n    //         {doc.title}\r\n    //       </Menu.Item>\r\n    //     ))} */}\r\n    //     {console.log(\"ok\")}\r\n    //     {folder.folders.map(new_folder => (\r\n    //       <SubMenu key={new_folder.id}>{this.buildSideBar(new_folder)}</SubMenu>\r\n    //     ))}\r\n    //   </Fragment>\r\n    // );\r\n\r\n    return folder.folders.map(new_folder => (\r\n      <SubMenu key={new_folder.id}>{this.buildSideBar(new_folder)}</SubMenu>\r\n    ));\r\n    // if (!folder) return undefined;\r\n    // return (\r\n    //   <div>\r\n    //     {folder.documents.map(doc => (\r\n    //       <Menu.Item key={doc.id}>{doc.title}</Menu.Item>\r\n    //     ))}\r\n    //     {/* {folder.folder ? this.buildSideBar(folder.folder) : undefined} */}\r\n    //   </div>\r\n    // );\r\n    // var documents = undefined;\r\n    // if (folder.documents) {\r\n    //   documents = (\r\n    //     <div>\r\n    //       <Menu\r\n    //         theme={this.state.theme}\r\n    //         style={{ width: this.props.width, height: this.props.height }}\r\n    //         mode=\"inline\"\r\n    //         inlineCollapsed={this.state.collapsed}\r\n    //       >\r\n    //         {folder.documents.map(doc => (\r\n    //           <Menu.Item key={doc.id}>{doc.title}</Menu.Item>\r\n    //         ))}\r\n    //       </Menu>\r\n    //     </div>\r\n    //   );\r\n    // }\r\n    // return documents;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu\r\n        theme={this.state.theme}\r\n        style={{ width: \"100%\", height: this.props.height }}\r\n        mode=\"inline\"\r\n        inlineCollapsed={this.state.collapsed}\r\n        style={{ height: this.props.height, width: this.props.width }}\r\n      >\r\n        {this.buildSideBar(this.state.folder)}\r\n      </Menu>\r\n    );\r\n    // return (\r\n    //   <div>\r\n    //     <Menu\r\n    //       theme={this.state.theme}\r\n    //       style={{ width: \"100%\", height: this.props.height }}\r\n    //       mode=\"inline\"\r\n    //       inlineCollapsed={this.state.collapsed}\r\n    //       style={{ height: this.props.height, width: this.props.width }}\r\n    //     >\r\n    //       <SubMenu\r\n    //         key=\"sub1\"\r\n    //         title={\r\n    //           <span>\r\n    //             <Icon type=\"mail\" />\r\n    //             <span>Navigation One</span>\r\n    //           </span>\r\n    //         }\r\n    //       >\r\n    //         <Menu.Item key=\"1\">Option 1</Menu.Item>\r\n    //         <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n    //         <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n    //         <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n    //       </SubMenu>\r\n    //       <SubMenu\r\n    //         key=\"sub2\"\r\n    //         title={\r\n    //           <span>\r\n    //             <Icon type=\"appstore\" />\r\n    //             <span>Navigation Two</span>\r\n    //           </span>\r\n    //         }\r\n    //       >\r\n    //         <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n    //         <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n    //         <SubMenu key=\"sub3\" title=\"Submenu\">\r\n    //           <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n    //           <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n    //         </SubMenu>\r\n    //       </SubMenu>\r\n    //       <SubMenu\r\n    //         key=\"sub4\"\r\n    //         title={\r\n    //           <span>\r\n    //             <Icon type=\"setting\" />\r\n    //             <span>Navigation Three</span>\r\n    //           </span>\r\n    //         }\r\n    //       >\r\n    //         <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n    //         <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n    //         <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n    //         <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n    //       </SubMenu>\r\n    //     </Menu>\r\n    //   </div>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default SideMenu;\r\n"]},"metadata":{},"sourceType":"module"}